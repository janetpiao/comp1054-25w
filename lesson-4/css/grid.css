@charset "utf-8";

html {
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  background: #ccc;
}

#container {
  border: 5px dotted red;
  background: #fcc;
  width: 80%;
  margin: 0 auto;
  /* STEP 1: Set the container to display: grid; */
  display: grid;

  /* STEP 7: Plot out the grid-template-areas */
  grid-template-areas:
    "header header header"
    "navigation pagecontent advertising"
    "footer footer footer";
  /* STEP 8: Control the height of the grid rows */
  grid-template-rows: 150px auto 100px;

  /* STEP 9: Control the width of the grid columns (try the fr unit) */
  grid-template-columns: 1fr 3fr 1fr;
  /* STEP 10b: Set the gap */
  gap: 1rem;
}

header {
  border: 5px dotted blue;
  background: #ccf;
  /* STEP 2: Identify the header as a grid-area */
  grid-area: header;

  /* STEP 11a: Fix the <header> - set display: flex; to have the <h1> and the <nav> sit beside each other */

  /* STEP 11b: Set them at either end of the <header> with justify-content: space-between; */

  /* What do you think? Which of the three methods do you think was the most appropriate for the "Holy Grail" layout? */
}

header nav ul {
  list-style-type: none;
  padding: 0;
}

header nav ul li {
  display: inline;
}

#container > nav {
  border: 5px dotted green;
  background: #cfc;
  /* STEP 3: Identify the nav as a grid-area */
  grid-area: navigation;
}

section {
  border: 5px dotted darkorange;
  background: #fc9;
  /* STEP 4: Identify the section as a grid-area */
  grid-area: pagecontent;
}

aside {
  border: 5px dotted purple;
  background: #c9c;
  /* STEP 5: Identify the aside as a grid-area */
  grid-area: advertising;
}

footer {
  border: 5px dotted orange;
  background: #ff9;
  /* STEP 6: Identify the footer as a grid-area */
  grid-area: footer;
}

header,
#container > nav,
#container > section,
#container > aside,
footer {
  /* STEP 10a: add some padding to the main layout containers to give the text some room to breathe - see the effect in the browser, then comment this out and head up to the #container rule for an alternative */
}
